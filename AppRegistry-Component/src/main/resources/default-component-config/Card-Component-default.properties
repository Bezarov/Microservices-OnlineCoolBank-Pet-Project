server.address=localhost
server.port=3333

#Eureka Client settings
eureka.client.service-url.defaultZone=http://localhost:8701/eureka/
eureka.instance.virtual-host-name=CARD-COMPONENTS
eureka.instance.appname=CARD-COMPONENTS
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.enabled=true

#CloudConfig settings
spring.cloud.config.uri=http://localhost:8601
spring.cloud.config.fail-fast=true
spring.config.import=optional:configserver:

#Kafka settings
spring.kafka.bootstrap-servers=localhost:9092

#PostgreSQL Database settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5436/card
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=admin
spring.datasource.password=card
spring.jpa.hibernate.ddl-auto=create-drop

#DB Logging settings
logging.charset.file=utf-8
logging.file.name=Card-Component/src/main/java/com/example/cardcomponent/log/db-error.log
logging.level.root=error

#Resilience4j
spring.cloud.openfeign.circuitbreaker.enabled=true

#Resilience4j for Account Components
resilience4j.circuitbreaker.instances.accountComponentCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.accountComponentCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.accountComponentCircuitBreaker.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.accountComponentCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.accountComponentCircuitBreaker.waitDurationInOpenState=5s